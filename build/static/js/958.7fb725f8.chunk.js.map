{"version":3,"file":"static/js/958.7fb725f8.chunk.js","mappings":"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","sources":["pages/Discount/_components/Modal.tsx","pages/Discount/Discount.tsx","store/rootHooks.ts"],"sourcesContent":["import { useDiscountAddMutation, useDiscountUpdateMutation } from \"store/endpoints\";\r\nimport { Form, message, Input, Upload, ModalProps, Modal } from \"antd\";\r\nimport { LoadingOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport type { UploadChangeParam } from 'antd/es/upload';\r\nimport type { RcFile, UploadFile, UploadProps } from 'antd/es/upload/interface';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { updateDiscountStates } from \"store/slices/discountSlice\";\r\nimport { DiscountDTO } from \"types/discountTypes\";\r\nimport { useAppDispatch } from \"store/rootHooks\";\r\n\r\n\r\ntype Props = ModalProps & {\r\n    updateData: DiscountDTO | undefined,\r\n    modalType: string;\r\n};\r\n\r\n\r\nconst getBase64 = (img: RcFile, callback: (url: string) => void) => {\r\n    const reader = new FileReader();\r\n    reader.addEventListener('load', () => callback(reader.result as string));\r\n    reader.readAsDataURL(img);\r\n};\r\n\r\nconst beforeUpload = (file: RcFile) => {\r\n    const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n    if (!isJpgOrPng) {\r\n        message.error('Siz faqat JPG/PNG turdagi fayllarni yuklay olasiz!');\r\n    }\r\n    const isLt2M = file.size / 1024 / 1024 < 2;\r\n    if (!isLt2M) {\r\n        message.error(\"Surat hajmi 2MB dan kichik bo'lishi kerak!\");\r\n    }\r\n    return isJpgOrPng && isLt2M;\r\n};\r\n\r\nconst DiscountModal: React.FC<Props> = ({ updateData, modalType, ...modalProps }) => {\r\n    const dispatch = useAppDispatch()\r\n    const [form] = Form.useForm();\r\n    const [loading, setLoading] = useState(false);\r\n    const [imageUrl, setImageUrl] = useState<string>();\r\n    const [responseImageUrl, setResponseImageUrl] = useState<string>();\r\n    const [discountAddMutation, discountAdd] = useDiscountAddMutation();\r\n    const [discountUpdateMutation, discountUpdate] = useDiscountUpdateMutation();\r\n    const clearState = () => {\r\n        setImageUrl('')\r\n        form.resetFields()\r\n    }\r\n    const handleSubmit = () => {\r\n        form.validateFields()\r\n            .then(data => {\r\n                const formData = { ...data, image: responseImageUrl }\r\n                if (modalType === 'update') {\r\n                    data.image = responseImageUrl\r\n                    const dicountPromise =  discountUpdateMutation ({\r\n                        id: updateData?.id,\r\n                        value: formData,\r\n                    }).unwrap();\r\n                    dicountPromise\r\n                        .then((res) => {\r\n                            if (res.statusCode === 200) {\r\n                                message.success(\"Muvaffaqiyati tahrirlandi.\");\r\n                                setImageUrl(\"\")\r\n                                form.resetFields();\r\n                                dispatch(updateDiscountStates({ openModal: false, modalType: '' }))\r\n                            }\r\n                        })\r\n                        .catch((err: { message: any; }) => {\r\n                            message.error(`Xatolik yuz berdi. Xatolik: ${err.message}`);\r\n                        });\r\n                } else if (modalType === 'create') {\r\n                    const dicountPromise =  discountAddMutation(formData).unwrap();\r\n                    dicountPromise\r\n                        .then((res) => {\r\n                            if (res.statusCode === 200) {\r\n                                message.success(\"Muvaffaqiyati saqlandi.\");\r\n                                setImageUrl(\"\")\r\n                                form.resetFields();\r\n                                dispatch(updateDiscountStates({ openModal: false, modalType: '' }))\r\n                            }\r\n                        })\r\n                        .catch((err) => {\r\n                            message.error(`Xatolik yuz berdi. Xatolik: ${err.message}`);\r\n                        });\r\n                }\r\n            }).catch(err => console.log('Form error: ', err))\r\n\r\n    };\r\n\r\n    const handleChange: UploadProps['onChange'] = (info: UploadChangeParam<UploadFile>) => {\r\n        if (info.file.status === 'uploading') {\r\n            setLoading(true);\r\n            return;\r\n        }\r\n        if (info.file.status === 'done') {\r\n            setResponseImageUrl(info.file.response.result.url)\r\n            // Get this url from response in real world.\r\n            getBase64(info.file.originFileObj as RcFile, url => {\r\n                setLoading(false);\r\n                setImageUrl(url);\r\n            });\r\n        }\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        if (updateData && modalType === 'update') {\r\n            setImageUrl(`http://147.182.130.242:3000/${updateData?.image}`)\r\n            form.setFieldsValue({\r\n                image: updateData?.image,\r\n                description: updateData?.description,\r\n                title: updateData?.title,\r\n            })\r\n        }\r\n        return () => clearState()\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [updateData, modalType])\r\n\r\n    const uploadButton = (\r\n        <div>\r\n            {loading ? <LoadingOutlined /> : <PlusOutlined />}\r\n            <div style={{ marginTop: 8 }}>Upload</div>\r\n        </div>\r\n    );\r\n    const props = { onOk: handleSubmit, confirmLoading: modalType.length ? modalType === 'create' ? discountAdd.isLoading : discountUpdate.isLoading : false, ...modalProps }\r\n    return (\r\n        <>\r\n            <Modal\r\n                {...props}\r\n            >\r\n                <Form\r\n                    form={form}\r\n                    name=\"basic\"\r\n                    layout=\"vertical\"\r\n                    autoComplete=\"off\"\r\n                >\r\n                    <Form.Item\r\n                        name='image'\r\n                        label='Rasm:'\r\n                        rules={[\r\n                            { required: true, message: `Rasm yuklanmadi` },\r\n                        ]}\r\n                    >\r\n                        <Upload\r\n                            name=\"file\"\r\n                            listType=\"picture-card\"\r\n                            className=\"avatar-uploader\"\r\n                            showUploadList={false}\r\n                            action=\"http://147.182.130.242:3000/image-upload\"\r\n                            beforeUpload={beforeUpload}\r\n                            onChange={handleChange}\r\n                            maxCount={1}\r\n                        >\r\n                            {imageUrl ? <img src={imageUrl} alt=\"productImage\" style={{ width: '100%' }} /> : uploadButton}\r\n                        </Upload>\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                        name=\"title\"\r\n                        label=\"Sarlavha:\"\r\n                        rules={[\r\n                            { required: true, message: `Iltimos Sarlavhani kiriting` },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item\r\n                        name=\"description\"\r\n                        label=\"Tavsif:\"\r\n                        rules={[\r\n                            { required: true, message: `Iltimos Tavsifini kiriting` },\r\n                        ]}\r\n                    >\r\n                        <Input />\r\n                    </Form.Item>\r\n                </Form>\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default DiscountModal;\r\n","import React, { useState } from \"react\";\r\nimport { Button, Col, Image, message, Popconfirm, Row, Table, TableColumnsType } from \"antd\";\r\nimport { Typography } from \"antd\";\r\nimport { DiscountDTO } from \"types/discountTypes\";\r\nimport { useDiscountDeleteMutation, useDiscountQuery } from \"store/endpoints\";\r\nimport { updateDiscountStates } from \"store/slices/discountSlice\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useAppDispatch, useAppSelector } from \"store/rootHooks\";\r\nimport DiscountModal from \"./_components/Modal\";\r\n\r\n\r\nconst Discount: React.FC = () => {\r\n  const [discountDelete, { isLoading }] = useDiscountDeleteMutation();\r\n  const { t } = useTranslation()\r\n  const { openModal, modalType } = useAppSelector(state => state.discountSlice)\r\n  const dispatch = useAppDispatch()\r\n  const [updateData, setUpdateData] = useState<DiscountDTO | undefined>({ title: '', description: '', image: '' });\r\n  const [page, setPage] = useState(1);\r\n  const discountQuery = useDiscountQuery();\r\n\r\n\r\n  function onChange(page: number) {\r\n    setPage(page);\r\n    \r\n  }\r\n  \r\n  console.log(discountQuery.data?.meta);\r\n  const handleUpdate = (data: DiscountDTO) => {\r\n    setUpdateData(data);\r\n    dispatch(updateDiscountStates({ openModal: true, modalType: 'update' }))\r\n  };\r\n\r\n\r\n  const handleDelete = (id: number | undefined) => {\r\n    const discount = discountDelete({ id }).unwrap();\r\n    discount\r\n      .then((res) => {\r\n        if (res.statusCode === 200) {\r\n          message.success(\"Muvaffaqiyati ochirildi.\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        message.error(`Xatolik yuz berdi. Xatolik: ${err.message}`);\r\n      });\r\n  };\r\n\r\n\r\n\r\n\r\n  const columns: TableColumnsType<DiscountDTO> = [\r\n    {\r\n      title: \"№\",\r\n      dataIndex: \"id\",\r\n      key: \"id\",\r\n      width: \"5%\",\r\n      render: (_, __, index) => <span>{index + 1}</span>,\r\n    },\r\n    {\r\n      title: \"Rasim\",\r\n      dataIndex: \"image\",\r\n      key: \"image\",\r\n      width: \"5%\",\r\n      render: (_, record) => {\r\n        return <Image\r\n          width={30}\r\n          height={30}\r\n          src={`http://147.182.130.242:3000/${record.image}`}\r\n        />\r\n      }\r\n    },\r\n    {\r\n      title: \"Name\",\r\n      dataIndex: \"title\",\r\n      key: \"title\",\r\n      width: \"30%\",\r\n      render: (item) => <span>{item}</span>,\r\n    },\r\n\r\n    {\r\n      title: \"Description\",\r\n      dataIndex: \"description\",\r\n      key: \"description\",\r\n      width: \"40%\",\r\n      render: (item) => <span>{item}</span>,\r\n    },\r\n\r\n    {\r\n      title: \"Action\",\r\n      key: \"action\",\r\n      width: \"20%\",\r\n      render: (item: DiscountDTO) => {\r\n        return (\r\n          <Row wrap={false} gutter={5}>\r\n            <Col>\r\n              <Button\r\n                size=\"small\"\r\n                type=\"primary\"\r\n                ghost\r\n                onClick={() => handleUpdate(item)}\r\n              >\r\n                {t('edit')}\r\n              </Button>\r\n            </Col>\r\n            <Col>\r\n              <Popconfirm\r\n                okText={t(\"yes\")}\r\n                cancelText={t(\"no\")}\r\n                onConfirm={() => handleDelete(item.id)}\r\n                title={t(\"sureDelete\")}\r\n              >\r\n                <Button size=\"small\" danger disabled={isLoading}>\r\n                  {t(\"delete\")}\r\n                </Button>\r\n              </Popconfirm>\r\n            </Col>\r\n          </Row>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n\r\n\r\n  const handleCloseModal = () => {\r\n    dispatch(updateDiscountStates({ openModal: false, modalType: '' }));\r\n    setUpdateData(undefined)\r\n  }\r\n\r\n  const modalProps = {\r\n    title: \"Diskont qo'shish\",\r\n    open: openModal,\r\n    okText: modalType === 'update' ? t('edit') : t('add'),\r\n    cancelText: t('close'),\r\n    onCancel: handleCloseModal\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col span={20}>\r\n          <Typography.Title level={2}>{t('menus.discount')}</Typography.Title>\r\n        </Col>\r\n        <Col span={4}>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => dispatch(updateDiscountStates({ openModal: true, modalType: 'create' }))}\r\n          >\r\n            {t('add')}\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      <Table\r\n        columns={columns}\r\n        dataSource={discountQuery.data?.data}\r\n        loading={discountQuery.isFetching}\r\n        pagination={{\r\n          total: discountQuery.data?.data.length,\r\n          pageSize: 5,\r\n          current: page,\r\n          onChange: (e) => onChange(e),\r\n          showSizeChanger: false,\r\n        }} \r\n      />\r\n\r\n      <DiscountModal updateData={updateData} modalType={modalType}  {...modalProps} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Discount;\r\n","import { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\r\nimport { AppDispatch, RootState } from \"./store\";\r\n\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n\r\n\r\n"],"names":["beforeUpload","file","isJpgOrPng","type","message","isLt2M","size","updateData","modalType","modalProps","dispatch","useAppDispatch","Form","form","useState","loading","setLoading","imageUrl","setImageUrl","responseImageUrl","setResponseImageUrl","useDiscountAddMutation","discountAddMutation","discountAdd","useDiscountUpdateMutation","discountUpdateMutation","discountUpdate","useEffect","image","setFieldsValue","description","title","resetFields","uploadButton","LoadingOutlined","PlusOutlined","style","marginTop","props","onOk","validateFields","then","data","formData","id","value","unwrap","res","statusCode","updateDiscountStates","openModal","catch","err","console","log","confirmLoading","length","isLoading","name","layout","autoComplete","label","rules","required","listType","className","showUploadList","action","onChange","info","status","response","result","url","img","callback","reader","FileReader","addEventListener","readAsDataURL","getBase64","originFileObj","maxCount","src","alt","width","useDiscountDeleteMutation","discountDelete","t","useTranslation","useAppSelector","state","discountSlice","setUpdateData","page","setPage","discountQuery","useDiscountQuery","meta","columns","dataIndex","key","render","_","__","index","record","height","item","wrap","gutter","ghost","onClick","okText","cancelText","onConfirm","danger","disabled","open","onCancel","undefined","span","level","dataSource","isFetching","pagination","total","pageSize","current","e","showSizeChanger","useDispatch","useSelector"],"sourceRoot":""}