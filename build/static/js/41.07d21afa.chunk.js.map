{"version":3,"file":"static/js/41.07d21afa.chunk.js","mappings":"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","sources":["pages/Category/_components/ModalCreate/ModalCreate.tsx","pages/Category/_components/ModalUpdate/ModalUpdate.tsx","pages/Category/Category.tsx"],"sourcesContent":["import { Button, Col, Form, message, Row } from \"antd\";\r\nimport { FormElements, Modal  } from \"components/index\";\r\nimport { useCategoryAddMutation } from \"store/endpoints\";\r\nimport { CategoryDTO } from \"types/category\";\r\n\r\ntype Props = {\r\n  visible: boolean;\r\n  setVisible: (bool: boolean) => void;\r\n  handleOk?: () => void;\r\n};\r\nconst ModalCreate: React.FC<Props> = ({ visible, setVisible, handleOk }) => {\r\n  const [form] = Form.useForm();\r\n  const [categoryMutation, { isLoading }] = useCategoryAddMutation();\r\n\r\n  const handleSubmit = (value: CategoryDTO) => {\r\n    const categoryPromise = categoryMutation(value).unwrap();\r\n    categoryPromise\r\n      .then((res) => {\r\n        if (res.statusCode === 200) {\r\n          message.success(\"Muvaffaqiyati yaratildi.\");\r\n          setVisible(false);\r\n          form.resetFields();\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        message.error(`Xatolik yuz berdi. Xatolik: ${err.message}`);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        title={\"Kategoriya yaratish\"}\r\n        open={visible}\r\n        onOk={handleOk}\r\n        onCancel={() => setVisible(false)}         >\r\n        <Form\r\n          form={form}\r\n          name=\"basic\"\r\n          layout=\"vertical\"\r\n          onFinish={handleSubmit} // onFinishFailed={onFinishFailed}\r\n          autoComplete=\"off\"\r\n        >\r\n          <Form.Item\r\n            name=\"name\"\r\n            label=\"kategoriya:\"\r\n            rules={[\r\n              { required: true, message: `Iltimos kategoriyani kiriting` },\r\n            ]}\r\n          >\r\n            <FormElements.Input />\r\n          </Form.Item>\r\n          <Form.Item style={{ marginTop: 50 }}>\r\n            <Row justify=\"end\" gutter={5} wrap={false}>\r\n              <Col>\r\n                <Button onClick={() => setVisible(false)} disabled={isLoading}>\r\n                  Bekor qilish\r\n                </Button>\r\n              </Col>\r\n              <Col>\r\n                <Button\r\n                  htmlType=\"submit\"\r\n                  loading={isLoading}\r\n                  disabled={isLoading}\r\n                  type=\"primary\" \r\n                >\r\n                  Tasdiqlash\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ModalCreate;\r\n","// <<<<<<< HEAD\r\n// import { Button, Col, Form, message, Row } from \"antd\";\r\n// import { FormElements, Modal as AntdModal } from \"components/index\";\r\n// =======\r\nimport { Button, Col, Form, message, Row } from \"antd\";\r\nimport { FormElements, Modal } from \"components/index\";\r\n// >>>>>>> aeff1e72ab04e04f8d95e8a8609080c413201bd7\r\nimport { useEffect } from \"react\";\r\nimport { useCategoryUpdateMutation } from \"store/endpoints\";\r\nimport { CategoryDTO } from \"types/category\";\r\n\r\ntype Props = {\r\n  visible: boolean;\r\n  setVisible: (bool: boolean) => void;\r\n  updateData: CategoryDTO;\r\n};\r\n\r\nconst ModalUpdate: React.FC<Props> = ({ visible, setVisible, updateData }) => {\r\n  const [form] = Form.useForm();\r\n  const [categoryUpdateMutation, { isLoading }] = useCategoryUpdateMutation();\r\n\r\n  const handleSubmit = (value: any) => {\r\n    const categoryPromise = categoryUpdateMutation({\r\n      id: updateData.id,\r\n      value,\r\n    }).unwrap();\r\n    categoryPromise\r\n      .then((res) => {\r\n        if (res.statusCode === 200) {\r\n          message.success(\"Muvaffaqiyati tahrirlandi.\");\r\n          setVisible(false);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        message.error(`Xatolik yuz berdi. Xatolik: ${err.message}`);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (form.__INTERNAL__.name) {\r\n      form.setFieldsValue({\r\n        name: updateData.name,\r\n      });\r\n    }\r\n  }, [form, updateData]);\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        title={\"Kategoriyani tahrirlash\"}\r\n        open={visible}\r\n        onCancel={() => setVisible(false)}\r\n      >\r\n        <Form\r\n          form={form}\r\n          name=\"basic\"\r\n          layout=\"vertical\"\r\n          onFinish={handleSubmit} // onFinishFailed={onFinishFailed}\r\n          autoComplete=\"off\"\r\n        >\r\n          <Form.Item\r\n            name=\"name\"\r\n            label=\"kategoriya:\"\r\n            rules={[\r\n              { required: true, message: `Iltimos kategoriyani kiriting` },\r\n            ]}\r\n          >\r\n            <FormElements.Input />\r\n          </Form.Item>\r\n\r\n          <Form.Item style={{ marginTop: 50 }}>\r\n            <Row justify=\"end\" gutter={5} wrap={false}>\r\n              <Col>\r\n                <Button onClick={() => setVisible(false)} disabled={isLoading}>\r\n                  Bekor qilish\r\n                </Button>\r\n              </Col>\r\n              <Col>\r\n                <Button\r\n                  htmlType=\"submit\"\r\n                  loading={isLoading}\r\n                  disabled={isLoading}\r\n                  type=\"primary\"\r\n                >\r\n                  Tasdiqlash\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ModalUpdate;\r\n","import React, { useState } from \"react\";\r\nimport { Button, Col, message, Row, TableColumnsType } from \"antd\";\r\nimport { Typography } from \"antd\";\r\nimport { PopConfirm, Table } from \"components/index\";\r\nimport ModalCreate from \"./_components/ModalCreate/ModalCreate\";\r\nimport { CategoryDTO } from \"types/category\";\r\nimport ModalUpdate from \"./_components/ModalUpdate/ModalUpdate\";\r\nimport { useCategoryDeleteMutation, useCategoryQuery } from \"store/endpoints\";\r\n\r\nconst Category: React.FC = () => {\r\n  const categoryQuery = useCategoryQuery();\r\n  const [categoryDelete, { isLoading }] = useCategoryDeleteMutation();\r\n  const [modalCreate, setModalCreate] = useState<boolean>(false);\r\n  const [modalUpdate, setModalUpdate] = useState<boolean>(false);\r\n  const [updateData, setUpdateData] = useState<CategoryDTO>({ name: \"\" });\r\n\r\n  const handleUpdate = (data: CategoryDTO) => {\r\n    setModalUpdate(true);\r\n    setUpdateData(data);\r\n  };\r\n  const handleDelete = (id: number | undefined) => {\r\n    const category = categoryDelete({ id }).unwrap();\r\n    category\r\n      .then((res) => {\r\n        if (res.statusCode === 200) {\r\n          message.success(\"Muvaffaqiyati o'chirildi.\");\r\n          setModalUpdate(false);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        message.error(`Xatolik yuz berdi. Xatolik: ${err.message}`);\r\n      });\r\n  };\r\n\r\n  const columns: TableColumnsType<CategoryDTO> = [\r\n    {\r\n      title: \"№\",\r\n      dataIndex: \"id\",\r\n      key: \"id\",\r\n      width: \"5%\",\r\n      render: (item, record, index) => <span>{index + 1}</span>,\r\n    },\r\n    {\r\n      title: \"Nomi\",\r\n      dataIndex: \"name\",\r\n      key: \"name\",\r\n      width: \"75%\",\r\n      render: (item) => <span>{item}</span>,\r\n    },\r\n    {\r\n      title: \"Amallar\",\r\n      key: \"action\",\r\n      width: \"20%\",\r\n      render: (item: CategoryDTO, record, index) => {\r\n        return (\r\n          <Row wrap={false} gutter={5}>\r\n            <Col>\r\n              <Button\r\n                size=\"small\"\r\n                type=\"primary\"\r\n                ghost\r\n                onClick={() => handleUpdate(item)}\r\n              >\r\n                Edit\r\n              </Button>\r\n            </Col>\r\n            <Col>\r\n              <PopConfirm\r\n                onConfirm={() => handleDelete(item.id)}\r\n                title=\"Oʻchirishga ishonchingiz komilmi?\"\r\n              >\r\n                <Button size=\"small\" danger disabled={isLoading}>\r\n                  Delete\r\n                </Button>\r\n              </PopConfirm>\r\n            </Col>\r\n          </Row>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col span={20}>\r\n          <Typography.Title level={2}>Kategoriyalar</Typography.Title>\r\n        </Col>\r\n        <Col span={4}>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => setModalCreate((prev) => !prev)}\r\n          >\r\n            Yaratish\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Table\r\n        columns={columns}\r\n        dataSource={categoryQuery.data?.data}\r\n        loading={categoryQuery.isFetching}\r\n        pagination={{ defaultPageSize: 5 }}\r\n        rowKey={record => record.id}\r\n      />\r\n      <ModalCreate visible={modalCreate} setVisible={setModalCreate} />\r\n      <ModalUpdate\r\n        updateData={updateData}\r\n        visible={modalUpdate}\r\n        setVisible={setModalUpdate}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Category;\r\n"],"names":["visible","setVisible","handleOk","Form","form","useCategoryAddMutation","categoryMutation","isLoading","title","open","onOk","onCancel","name","layout","onFinish","value","unwrap","then","res","statusCode","message","resetFields","catch","err","autoComplete","label","rules","required","style","marginTop","justify","gutter","wrap","onClick","disabled","htmlType","loading","type","updateData","useCategoryUpdateMutation","categoryUpdateMutation","useEffect","__INTERNAL__","setFieldsValue","id","categoryQuery","useCategoryQuery","useCategoryDeleteMutation","categoryDelete","useState","modalCreate","setModalCreate","modalUpdate","setModalUpdate","setUpdateData","columns","dataIndex","key","width","render","item","record","index","size","ghost","data","onConfirm","danger","span","level","prev","dataSource","isFetching","pagination","defaultPageSize","rowKey"],"sourceRoot":""}